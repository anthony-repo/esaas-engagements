version: '3'
services:
<%- if options[:doc] -%>
  # Container that has the rails application server
<%- end -%>
  rails-server:
    container_name: rails-server
    build:
      context: .
      dockerfile: Dockerfile
    command: bin/rails server --port 3000 --binding 0.0.0.0
    ports:
      - 3000:3000
    volumes: # map volume for live reload
      - .:/app
    environment:
      - RAILS_ENV=<%= options[:rails_env] %>
      <%- if options[:rails_env] == 'production' -%>
      - DATABASE_URL=<%= options[:database_url] %>
      - SECRET_KEY_BASE=<%= options[:prod_secret_key] %>
      - github_key=<%= options[:prod_github_key] %>
      - github_secret=<%= options[:prod_github_secret] %>
      <%- end -%>
    links:
    <%- if options[:pg_host] == 'postgres-server' -%>
      - postgres-server
    <%- end -%>
      - minio-s3mock
    restart: always
<%- if options[:aws_host_name] == 'minio-s3mock:9000' -%>
<%- if options[:doc] -%>
  # Container that has the Minio server that mocks the S3 API.
  # If --aws_host_name is not set then the minio container will use be added.
<%- end -%>
  minio-s3mock:
    image: minio/minio
    volumes:
      - /var/lib/minio/data
    environment:
    <%- if options[:doc] -%>
      # Minio Access Key and Secret should match those in application.yml
      # Minio Access Key is enforced as a safety failsafe.
    <%- end -%>
      - MINIO_ACCESS_KEY=<%= options[:aws_key_id] %>
      - MINIO_SECRET_KEY=<%= options[:aws_secret_key] %>
<%- end -%>
<%- if options[:pg_host] == 'postgres-server' -%>
  postgres-server:
    image: postgres:latest
    <%- if options[:pg_vmap] -%>
    volumes:
      - ./tmp/postgres-server:/var/lib/postgresql/data
    <%- end -%>
    environment:
      - POSTGRES_PASSWORD=<%= options[:pg_pass] %>
      - POSTGRES_USER=<%= options[:pg_user] %>
      - POSTGRES_DB=<%= options[:pg_dbase] %>
<%- end -%>
